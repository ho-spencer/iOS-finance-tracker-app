PostgreSQL Tables

### Users Table
id: table id of the user
email: user's app login email
password: user's app login password
created_at: time user created their account
  'id':
    - Data Type: integer
    - Primary Key: yes
    - Not Null: yes
    - Constraints -> Primary Key:
      "GENERATED BY DEFAULT AS IDENTITY"    (PostgreSQL will assigns the value, unless we explicitly provide a value.)
      - Type: IDENTITY   
      - Identity: ALWAYS

  'email':
    - Data Type: text
    - Not Null: yes

  'password':
    - Data Type: text
    - Not Null: yes

  'created_at':
    - Data Type: timestamp with time zone
    - Default: now()

### Transactions Table
id: table transaction id
user_id: links each transaction to the user (using a foreign key)
account_id: Plaid's account ID (to distinguish between banks and credit cards)
transaction_name: merchant name / transaction description
transaction_amount: transaction amount
transaction_date: transaction date
transaction_category: transaction category like "Food", "Travel", etc.
transaction_type: payment, refund, etc.
plaid_id: store the unique identifier that Plaid assigns to a record (such as transaction id, account id, item id)
  - When pulling data from Plaid, each object has a stable, globally unique identifier --> store this ID in the database
  - helps prevent duplicate data (ex: check if a transaction is already stored in the database)

  'id':
    - Data Type: integer
    - Primary Key: yes
    - Not Null: yes
    - Constraints -> Primary Key:
      "GENERATED BY DEFAULT AS IDENTITY"  (PostgreSQL will assign the value)
      - Type: IDENTITY
      - Identity: ALWAYS

  'user_id':
    - Data Type: integer
    - Not Null: yes
    - Constraints -> Foreign Key:
      - Local Column: 'user_id'    (column that is referencing another table)
      - Referenced Table (References): 'users' (public.users)
      - Referenced Column (Referencing): 'id'    ('id' column in the 'users' table)
    Note: Every value in transactions.user_id must match an existing users.id.

  'account_id':
    - Data Type: integer
    - Not Null: yes

  'transaction_name':
    - Data Type: text
    - Not Null: yes

  'transaction_amount':
    - Data Type: nummeric(10, 2)
      Precision: 10 --> total digits the number can hold before AND after the decimal
      Scale: 2 --> number of digits to the right of the decimal point

  'transaction_date':
    - Data Type: date

  'transaction_category':
    - Data Type: text[]    (array of text values, allows multiple categories)

  'transaction_type':
    - Data Type: text

  'plaid_id':
    - Data Type: text
    - Constraints -> Unique
